{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ltai2\\\\Desktop\\\\sdhacksmain\\\\sdhacks\\\\Mrga\\\\app\\\\CustomerAdd.js\";\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nfunction CustomerAdd(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name_input = _useState2[0],\n      onChangeName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone_input = _useState4[0],\n      onChangePhone = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      party_input = _useState6[0],\n      onChangeParty = _useState6[1];\n\n  return React.createElement(KeyboardAwareScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.waitlist_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.info_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    clearTextOnFocus: true,\n    textContentType: 'name',\n    placeholder: 'Enter name here',\n    onChangeText: function onChangeText(text) {\n      return onChangeName(text);\n    },\n    value: name_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    clearTextOnFocus: true,\n    textContentType: 'telephoneNumber',\n    keyboardType: 'number-pad',\n    placeholder: 'Enter phone number here',\n    onChangeText: function onChangeText(text) {\n      return onChangePhone(text);\n    },\n    value: phone_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    clearTextOnFocus: true,\n    textContentType: 'postalCode',\n    keyboardType: 'number-pad',\n    placeholder: 'Enter party size here',\n    onChangeText: function onChangeText(text) {\n      return onChangeParty(text);\n    },\n    value: party_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.add_btn,\n    onPress: function onPress() {\n      if (name_input == \"\" || phone_input == \"\" || party_input == \"\") {\n        console.log(\"None of the fields can be empty!\");\n      } else {\n        console.log(\"Name: \" + name_input);\n        console.log(\"Phone: \" + phone_input);\n        console.log(\"Party size: \" + party_input);\n        navigation.navigate('HOME');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, \"ADD\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'flex-end'\n  },\n  waitlist_container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  info_container: {\n    position: 'absolute',\n    width: '80%',\n    height: '50%',\n    bottom: '30%',\n    backgroundColor: '#fff',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  add_btn: {\n    width: '80%',\n    height: 60,\n    bottom: 20,\n    backgroundColor: 'dodgerblue',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    position: 'absolute'\n  },\n  input: {\n    paddingLeft: 10,\n    height: 50,\n    width: '80%',\n    borderColor: 'black',\n    borderWidth: 1\n  }\n});\nexport default CustomerAdd;","map":{"version":3,"sources":["C:/Users/ltai2/Desktop/sdhacksmain/sdhacks/Mrga/app/CustomerAdd.js"],"names":["React","useState","KeyboardAwareScrollView","CustomerAdd","navigation","name_input","onChangeName","phone_input","onChangePhone","party_input","onChangeParty","styles","container","waitlist_container","info_container","input","text","add_btn","console","log","navigate","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","position","width","height","bottom","alignSelf","paddingLeft","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useState } from 'react';\r\nimport { \r\n    StyleSheet, \r\n    SafeAreaView, \r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    KeyboardAvoidingView,\r\n    Platform\r\n} from 'react-native';\r\n\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\n/**\r\n * This is the screen redirected by the home screen.\r\n * Here, customers can add their name, phone number, and party size\r\n * The ADD button will store data into the database, refresh the\r\n * table in the home screen, and then redirect customers back to \r\n * the home screen where everything is updated\r\n * \r\n * @param navigation\r\n */\r\nfunction CustomerAdd({ navigation }) {\r\n    // name_input for name, phone_input for phone, party_input for party size\r\n    const [name_input, onChangeName] = useState('');\r\n    const [phone_input, onChangePhone] = useState('');\r\n    const [party_input, onChangeParty] = useState('');\r\n    \r\n    return (\r\n      /**\r\n       * KeyboardAvoidingView to solve the keyboard pushing layout out of order problem\r\n       */\r\n      <KeyboardAwareScrollView style={styles.container} /*behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} enabled={true}*/>\r\n\r\n          {/**\r\n           * Container for the whole screen. This container is wrapped within\r\n           * KeyBoardAvoidingView so that mobile phone's keyboard can't interupt\r\n           * the screen's layout too much\r\n           */}\r\n          <SafeAreaView style={styles.waitlist_container}>\r\n\r\n              {/**\r\n               * Container for the input boxes\r\n               */}\r\n              <View style={styles.info_container}>\r\n\r\n                {/**\r\n                 * This TextInput keeps track of customer's name\r\n                */}\r\n                <TextInput\r\n                  style={styles.input}\r\n                  clearTextOnFocus={true}\r\n                  textContentType={'name'}\r\n                  placeholder={'Enter name here'}\r\n                  onChangeText={text => onChangeName(text)}\r\n                  value={name_input}\r\n                />\r\n  \r\n                {/**\r\n                 * This TextInput keeps track of customer's phone number\r\n                 */}\r\n                <TextInput\r\n                  style={styles.input}\r\n                  clearTextOnFocus={true}\r\n                  textContentType={'telephoneNumber'}\r\n                  keyboardType={'number-pad'}\r\n                  placeholder={'Enter phone number here'}\r\n                  onChangeText={text => onChangePhone(text)}\r\n                  value={phone_input}\r\n                />\r\n  \r\n                {/**\r\n                * This TextInput keeps track of customer's party size\r\n                */}\r\n                <TextInput\r\n                  style={styles.input}\r\n                  clearTextOnFocus={true}\r\n                  textContentType={'postalCode'}\r\n                  keyboardType={'number-pad'}\r\n                  placeholder={'Enter party size here'}\r\n                  onChangeText={text => onChangeParty(text)}\r\n                  value={party_input}\r\n                />\r\n  \r\n              </View>\r\n  \r\n              {/**\r\n               * This is the ADD button\r\n               * Upon clicking, it will check whether the fields are empty\r\n               * If empty, display a warning. If not empty then store the data\r\n               * and go back to Customer Home screen\r\n               */}\r\n              <TouchableOpacity\r\n                  style={styles.add_btn}\r\n                  onPress={() =>  {\r\n  \r\n                    if (name_input == \"\" || phone_input == \"\" || party_input == \"\") {\r\n                        console.log(\"None of the fields can be empty!\")\r\n                    } else {\r\n                        console.log(\"Name: \" + name_input);\r\n                        console.log(\"Phone: \" + phone_input);\r\n                        console.log(\"Party size: \" + party_input);\r\n                        navigation.navigate('HOME');\r\n                    }\r\n                    \r\n                  }}\r\n              >\r\n                  <Text>ADD</Text>\r\n              </TouchableOpacity>\r\n\r\n          </SafeAreaView>\r\n        </KeyboardAwareScrollView>\r\n    );\r\n  }\r\n\r\n/**\r\n * Style for components used\r\n */\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      justifyContent: 'flex-end'\r\n    },\r\n\r\n    waitlist_container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    info_container: {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        height: '50%',\r\n        bottom: '30%',\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    add_btn: {\r\n        width: '80%',\r\n        height: 60,\r\n        bottom: 20,\r\n        backgroundColor: 'dodgerblue',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        position: 'absolute'\r\n    },\r\n\r\n    input: {\r\n        paddingLeft: 10,\r\n        height: 50,\r\n        width: '80%',\r\n        borderColor: 'black',\r\n        borderWidth: 1\r\n    }\r\n});\r\n\r\nexport default CustomerAdd;"]},"metadata":{},"sourceType":"module"}